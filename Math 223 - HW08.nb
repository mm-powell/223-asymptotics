(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    198617,       3803]
NotebookOptionsPosition[    196164,       3752]
NotebookOutlinePosition[    196634,       3771]
CellTagsIndexPosition[    196591,       3768]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Math 223: Homework 8", "Title",
 CellChangeTimes->{{3.819477029542458*^9, 3.8194770325147047`*^9}, {
  3.821379293198147*^9, 3.821379296097085*^9}, {3.821995564592634*^9, 
  3.821995564641439*^9}, {3.822505968981841*^9, 3.822505969456951*^9}, {
  3.822950185097549*^9, 3.8229501854849463`*^9}, {3.824155956879348*^9, 
  3.824155957352789*^9}, {3.8250182746998863`*^9, 3.825018274968522*^9}, {
  3.826471694566206*^9, 
  3.82647169480576*^9}},ExpressionUUID->"197654a4-4d8f-4ad2-acd2-\
0426bba106a8"],

Cell["Maia Powell ", "Author",
 CellChangeTimes->{{3.819477041266364*^9, 3.81947704456911*^9}, {
  3.820791496315102*^9, 
  3.820791498900507*^9}},ExpressionUUID->"47fdc244-5ee2-4b42-93c3-\
40f677fdf9ef"],

Cell["2 April 2021", "Affiliation",
 CellChangeTimes->{{3.8194774638175488`*^9, 3.819477466618027*^9}, {
   3.820791541430621*^9, 3.8207915437346478`*^9}, {3.821379669618865*^9, 
   3.821379678688252*^9}, 3.821740084763582*^9, {3.8219955607437153`*^9, 
   3.821995561040586*^9}, {3.822609132177661*^9, 3.822609132392248*^9}, {
   3.8229507137572002`*^9, 3.822950714791153*^9}, {3.824140316296628*^9, 
   3.824140319173958*^9}, {3.8250182874219513`*^9, 3.825018288405596*^9}, {
   3.82647169031205*^9, 
   3.8264716922177877`*^9}},ExpressionUUID->"581392a7-3011-4211-898e-\
5aefcdf8effb"],

Cell[CellGroupData[{

Cell["Problem 1", "Section",
 CellChangeTimes->{{3.8194770755713477`*^9, 3.8194770765366144`*^9}, {
  3.822080753692625*^9, 3.822080753763248*^9}, {3.82208081216962*^9, 
  3.822080815353836*^9}, {3.822506090236411*^9, 
  3.822506090325268*^9}},ExpressionUUID->"6c8fe1de-112b-425f-acb6-\
2124e9a34ef3"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Find the asymptotic behavior of  \n", "Subsubsection"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Integral]", "0"], "2"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"sin", "(", "t", ")"}], " ", "+", " ", "t"}], ")"}], 
     SuperscriptBox["e", "ixt"], "dt", " "}]}], TraditionalForm]],
  ExpressionUUID->"e7c9183a-33dc-4c4d-94fb-36ae8b9b8fcc"],
 " as x\[Rule] +\[Infinity] up to terms involving ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    SuperscriptBox["x", "2"]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "24eb3b17-f308-4205-98cc-40584ccb6384"],
 "."
}], "Subsubsection",
 CellChangeTimes->{
  3.8241403432184677`*^9, {3.824140454028754*^9, 3.8241405241386766`*^9}, {
   3.824140554904352*^9, 3.824140565369266*^9}, {3.8241406141600246`*^9, 
   3.8241406497455997`*^9}, {3.824140730271009*^9, 3.82414103758389*^9}, {
   3.8241550394228563`*^9, 3.824155172384779*^9}, {3.82415521525574*^9, 
   3.824155277549082*^9}, {3.825018354785822*^9, 3.825018366972331*^9}, {
   3.825018400594213*^9, 3.825018465043116*^9}, {3.826471729770207*^9, 
   3.826471795297263*^9}, {3.8264721807843657`*^9, 
   3.826472180890143*^9}},ExpressionUUID->"a0ae1b84-25f3-4300-a8df-\
bc290908fc17"],

Cell[TextData[{
 "We first observe that \[Phi](t)=t is monotonic in [0,2], and sin(t)+t is \
smooth. \n\nFollowing the formula \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"I", "(", "x", ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "a", "b"], 
      RowBox[{
       RowBox[{"f", "(", "t", ")"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "x", " ", "t"}]], 
       RowBox[{"\[DifferentialD]", "t"}]}]}], "\[Tilde]", " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "0"}], "\[Infinity]"], 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "n"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[ImaginaryI]", " ", "x"}], ")"}], 
         RowBox[{"n", "+", "1"}]]], "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["f", 
           RowBox[{"(", "n", ")"}]], "(", "b", ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "x", " ", "b"}]]}], "-", 
        RowBox[{
         RowBox[{
          SuperscriptBox["f", 
           RowBox[{"(", "n", ")"}]], "(", "a", ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "x", " ", "a"}]]}]}], "]"}]}]}]}], 
   TraditionalForm]],ExpressionUUID->"5e5529b3-6cd0-403f-af0d-dba18aee1264"],
 ",\nwe obtain: \nn=0:\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "ix"], "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"sin", "(", "2", ")"}], "+", "2"}], ")"}], 
      SuperscriptBox["e", 
       RowBox[{"2", "ix"}]]}], "]"}], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1937fa95-52cc-476f-a2d1-5960b6e69492"],
 "\nn=1:\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["x", "2"]], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"cos", "(", "2", ")"}], "+", "1"}], ")"}], 
      SuperscriptBox["e", 
       RowBox[{"2", "ix"}]]}], "-", " ", 
     RowBox[{"(", 
      RowBox[{"cos", "(", "0", ")"}], ")"}]}], "]"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4e83f5d4-ce69-4f27-ae36-1c6dfdddb977"],
 "\n\t\nThus, we approximate that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", "(", "x", ")"}], TraditionalForm]],
  FontColor->RGBColor[1, 0, 0],ExpressionUUID->
  "932b5d64-cdb6-4f8c-b36e-3401f6ebdfd0"],
 StyleBox[" ~ ",
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "ix"], "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"sin", "(", "2", ")"}], "+", "2"}], ")"}], 
      SuperscriptBox["e", 
       RowBox[{"2", "ix"}]]}], "]"}], " "}], TraditionalForm]],
  FontColor->RGBColor[1, 0, 0],ExpressionUUID->
  "f9f228f4-6157-4481-9a12-e9bc58123f12"],
 StyleBox["+",
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["x", "2"]], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"cos", "(", "2", ")"}], "+", "1"}], ")"}], 
      SuperscriptBox["e", 
       RowBox[{"2", "ix"}]]}], "-", " ", "1"}], "]"}], TraditionalForm]],
  FormatType->TraditionalForm,
  FontColor->RGBColor[1, 0, 0],ExpressionUUID->
  "ce4c68a1-7185-4521-92ed-11507976e994"],
 "\n"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQXXX5v8nS+jeOFp7s/iA60C4mCkRXs7yKAdH7lmgn
gujUkMoUEP2C9UQmiM7mS8wF0ZdWC5eA6E3PSitB9AzR8CYQbZUZNhFEK5k9
WAWiF+5W2Ayinfbu2QWidxznuwSic14+i18GpK+EL04D0VKtwjkg+l4a50wQ
fSQqfDGIPpBXAKbTotg3gGgZvk4wXbTyzh4QbXNiwl4QHbDz31EQbcEafBpE
d9yodLkIpAUOZ/iC6J6rV4qymt44hqXeBNM8ApOqQHTCsXPLQfQSK+HDIFqQ
RwxMb3HoPDAfSNtM3nEYRHetrz4Ooo9MXwumHy6foLcASP9d9ANMAwC+MbWl

  "],ExpressionUUID->"712ce36d-dfc1-4bba-9ea4-50782e379cd9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"\[ImaginaryI]", "*", "x"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sin", "[", "2", "]"}], "+", "2"}], ")"}], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", "\[ImaginaryI]", "*", "x"}]]}], "]"}], "+", 
      RowBox[{"Re", "[", 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["x", "2"]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", "2", "]"}], "+", "1"}], ")"}], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", "\[ImaginaryI]", "*", "x"}]]}], "-", 
          RowBox[{"Cos", "[", "0", "]"}]}], ")"}]}], "]"}]}], ",", " ", 
     RowBox[{"Re", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Sin", "[", "t", "]"}], ")"}], "+", "t"}], ")"}], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", "*", "x", "*", "t"}]]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "2"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Solid", ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}], ",", " ", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<t\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Re[x]\>\"", ",", " ", "Italic", ",", " ", "18"}], "]"}]}],
      "}"}]}], ",", " ", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Approximate\>\"", ",", "\"\<Exact\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.826472271618108*^9, 3.826472643786059*^9}, {
  3.82658096159583*^9, 3.826580970902207*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"f841fd77-ded7-4c2f-b290-dc53cacead6d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.005]], 
         LineBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAApFoEsHQK0D/s/ZAmuYYBwBI/CV4N
LtA/OK5w8IWkAMA7JpQ6h2TQP4zgxzCusP6/jvSp83rR0D/4AjsLVM75v7jb
NND0B9E/VHD5rMeB97/hwr+sbj7RPzx90p8STPW/NJHVZWKr0T+YkgJe3yDx
v154YELc4dE/qH9Sj8RS7r+HX+seVhjSP5Dv5O54ieq/2i0B2EmF0j/wEQB/
KGHjv3/KLEoxX9M/4E4DXoc9yr+osbcmq5XTP0AefVe5Fr2/0phCAyXM0z8A
DgEk3BSavyRnWLwYOdQ/4K78BOwjwj9OTuOYkm/UP6B45svEScw/dzVudQym
1D8gL6rpLwvTP8oDhC4AE9U/gF0bmutY3D/06g4LeknVP1BqEYHQYeA/HdKZ
5/N/1T94/IxPJITiP3Cgr6Dn7NU/KCFzNJKS5j8WPdsSz8bWP3h2TMWs6O0/
QCRm70j91j+wX1ySOpjvP2kL8cvCM9c/QHYKG9Wc8D+82QaFtqDXP5ihREUR
KvI/5sCRYTDX1z8QwGiaC+fyPw+oHD6qDdg/MBYLH+Od8z9idjL3nXrYP/qs
x2T6+fQ/jF290xex2D+8Sc/tnJ/1P7VESLCR59g/pvtKcOI/9j8IE15phVTZ
P0hbgNwFcfc/rq+J22wu2j/UchaAGJr5P+oS6oxKYdo/ajPuf/4Q+j8ndko+
KJTaP0jFmvJBhPo/oDwLoeP52j/ax/x8SGD7P9yfa1LBLNs/xhtG5zzJ+z8Z
A8wDn1/bP0SDPH7xLvw/ksmMZlrF2z8aC/hz9PD8P84s7Rc4+Ns/9C9XgG1N
/T8LkE3JFSvcP5jnciX8pv0/hFYOLNGQ3D+sDLKxp1H+P3bjj/FHXN0/3tll
MDKH/z+yRvCiJY/dP27HJ2hXzv8/76lQVAPC3T9n6RmfjgkAQGhwEbe+J94/
dIhS7uJKAECk03FonFreP41PFIHiaQBAPIeTZkp33j83RxKTwXoAQIKPdZA=

          "]], 
         LineBox[CompressedData["
1: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
4dg=
          "]]}, Annotation[#, "Charting`Private`Tag$550594#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.005]], 
         LineBox[CompressedData["
1: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
uRfVo6IxzZmFBSYEnZJti2utR/8D64a1dQ==
          "]]}, Annotation[#, "Charting`Private`Tag$550594#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        StyleBox["\"t\"", Italic, 18, StripOnInput -> False], 
        TraditionalForm], 
       FormBox[
        StyleBox["\"Re[x]\"", Italic, 18, StripOnInput -> False], 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {-2.190782834338952, 2.0599395265534457`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 14]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Approximate\"", "\"Exact\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8264724086339693`*^9, 3.8264724194838533`*^9}, 
   3.826472531489205*^9, 3.826472619118689*^9, 3.826472651342472*^9, 
   3.826580983690089*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"95a77862-9b9d-4340-9788-f6c2b5637964"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.824156726824457*^9},ExpressionUUID->"5a3994fa-a7c1-451c-a20a-\
4f6e05c5c66b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 2", "Section",
 CellChangeTimes->{{3.8194770755713477`*^9, 3.8194770765366144`*^9}, {
  3.822080753692625*^9, 3.822080753763248*^9}, {3.82208081216962*^9, 
  3.822080815353836*^9}, {3.822506090236411*^9, 3.822506090325268*^9}, {
  3.82501850082621*^9, 
  3.825018501275012*^9}},ExpressionUUID->"5978323c-4735-4fe8-a798-\
9f0f2eef2ef5"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Using the method of stationary phase to find the \
leading behaviors of the following integrals as x\[Rule] +\[Infinity].   ", \
"Subsubsection"]], "Subsubsection",
 CellChangeTimes->{
  3.8241403432184677`*^9, {3.824140454028754*^9, 3.8241405241386766`*^9}, {
   3.824140554904352*^9, 3.824140565369266*^9}, {3.8241406141600246`*^9, 
   3.8241406497455997`*^9}, {3.824140730271009*^9, 3.82414103758389*^9}, {
   3.8241550394228563`*^9, 3.824155172384779*^9}, {3.82415521525574*^9, 
   3.824155277549082*^9}, {3.825018354785822*^9, 3.825018366972331*^9}, {
   3.825018400594213*^9, 3.825018465043116*^9}, {3.825018538263975*^9, 
   3.82501860108747*^9}, {3.826472717085887*^9, 
   3.826472775158126*^9}},ExpressionUUID->"1f65448a-b07f-40ad-adf3-\
66189185f3f6"],

Cell[TextData[{
 StyleBox["(a.) ", "Subsubsection"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Integral]", "0"], "1"], 
    RowBox[{
     RowBox[{"tan", "(", "t", ")"}], 
     SuperscriptBox["e", 
      SuperscriptBox["ixt", "4"]], "dt", " "}]}], TraditionalForm]], 
  "Subsubsection",ExpressionUUID->"4e530038-bb35-4ffb-ac06-60e65ef4c42b"], 
  "Subsubsection"]
}], "Text",
 CellChangeTimes->{{3.826472782511511*^9, 
  3.826472825408596*^9}},ExpressionUUID->"3477c812-59ce-4d0d-ba0e-\
0e8618c79867"],

Cell[TextData[{
 "Because tan(t) ~ t, we would like to approximate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     RowBox[{"tan", "(", "t", ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "x", " ", 
       SuperscriptBox["t", "4"]}]], "dt"}]}], TraditionalForm]],
  ExpressionUUID->"5739178a-b93f-43ee-8910-b5139180094d"],
 "  as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{"t", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "x", " ", 
       SuperscriptBox["t", "4"]}]], "dt"}]}], TraditionalForm]],
  ExpressionUUID->"37ca5a48-c5a7-4798-b23e-4ec589ffc219"],
 ".\n\nWe first perform a substitution, such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "=", 
    SuperscriptBox["t", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "79ca5658-3b67-43ff-9fe8-fa39ac5fe59c"],
 ":\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{"t", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "x", " ", 
       SuperscriptBox["t", "4"]}]], "dt"}]}], TraditionalForm]],
  ExpressionUUID->"54e09f89-0bd6-4ab3-aec1-c6fbfb3d755e"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "x", " ", 
       SuperscriptBox["t", "2"]}]], "dt"}]}], TraditionalForm]],
  ExpressionUUID->"2c26bc96-06ee-4e84-a022-a5d78595927a"],
 "\n\nWe then use the method of stationary phase with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "t", ")"}], " ", "=", " ", 
    FractionBox["1", "2"]}], TraditionalForm]],ExpressionUUID->
  "a3147f54-bd19-445a-8ae3-ea54c95150e4"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Phi]", "(", "t", ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["t", "2"], " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"\[Phi]", "''"}], 
       RowBox[{"(", "t", ")"}]}]}], "=", "2"}]}], TraditionalForm]],
  ExpressionUUID->"6ef3083c-8ff2-4f9d-b14a-5a6e5c39e537"],
 ". Setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]", "'"}], 
     RowBox[{"(", "t", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "t"}], "=", "0"}]}], TraditionalForm]],ExpressionUUID->
  "47a8a2d4-8eae-48a5-bba1-f9fe928f3843"],
 ", we obtain that t* = 0 = a.  Thus, using the formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"I", "(", "x", ")"}], " ", "\[Tilde]", " ", 
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"2", "\[Pi]"}], 
        RowBox[{"x", "|", 
         RowBox[{
          RowBox[{"\[Phi]", "''"}], 
          RowBox[{"(", "a", ")"}]}], "|"}]], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"f", "(", "a", ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "x", " ", 
        RowBox[{"\[Phi]", "(", "a", ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
        RowBox[{
         RowBox[{"sgn", "(", 
          RowBox[{
           RowBox[{"\[Phi]", "''"}], 
           RowBox[{"(", "a", ")"}]}], ")"}], "/", "4"}]}]}]]}]}], 
   TraditionalForm]],ExpressionUUID->"e1a629f5-94e5-4237-a998-06c33f5c46fb"],
 ", we obtain:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"I", "(", "x", ")"}], " ", "\[Tilde]", " ", 
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["\[Pi]", "x"], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     FractionBox["1", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"\[Pi]", " ", "/", "4"}]}]]}]}], TraditionalForm]],
  FontColor->RGBColor[1, 0, 0],ExpressionUUID->
  "9bd9f664-1919-4d00-b156-2bfb3b1c631e"]
}], "Text",
 CellChangeTimes->{{3.825105369530801*^9, 3.8251053970675592`*^9}, {
   3.825107255966365*^9, 3.8251072564007673`*^9}, 3.8251082367481422`*^9, {
   3.825108862974568*^9, 3.8251089313495283`*^9}, {3.825109401366744*^9, 
   3.8251094016595287`*^9}, 3.826471861611787*^9, {3.8264729148320436`*^9, 
   3.826473081039804*^9}, {3.826473252413972*^9, 3.8264732755066223`*^9}, {
   3.826473482823551*^9, 3.826473499285646*^9}, {3.82647353016121*^9, 
   3.826473576248094*^9}, {3.826580384285231*^9, 3.8265805161070023`*^9}, {
   3.826580720200035*^9, 3.8265807277282476`*^9}, {3.8265810706156893`*^9, 
   3.82658109522147*^9}, {3.8265813881536283`*^9, 
   3.8265814488642282`*^9}},ExpressionUUID->"8b7dfdab-ff9e-4369-b575-\
6be1c0078268"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       FractionBox["1", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["\[Pi]", "x"], ")"}], 
        RowBox[{"1", "/", "2"}]], 
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"\[Pi]", " ", "/", "4"}]}]]}], "]"}], ",", " ", 
     RowBox[{"Re", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Tan", "[", "t", "]"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "x", "*", " ", 
           SuperscriptBox["t", "4"]}]]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "75"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Solid", ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}], ",", " ", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<t\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Re[x]\>\"", ",", " ", "Italic", ",", " ", "18"}], "]"}]}],
      "}"}]}], ",", " ", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Approximate\>\"", ",", "\"\<Exact\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.826580547019805*^9, 3.8265805938729467`*^9}, {
   3.826580731178151*^9, 3.826580731772496*^9}, 3.8265808163256207`*^9, {
   3.826580887269985*^9, 3.826580952443815*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"bdefc3e7-ce2a-453a-8f27-01e511a62cca"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.005]], 
         LineBox[CompressedData["
1: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
I0j4Dw9ZkKA=
          "]]}, Annotation[#, "Charting`Private`Tag$466320#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.005]], 
         LineBox[CompressedData["
1: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
kg==
          "]], 
         LineBox[CompressedData["
1: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
FMCJiOTBkUc8NDlpZz3niAD+B/7iAj0=
          "]]}, Annotation[#, "Charting`Private`Tag$466320#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.031154063605413944`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        StyleBox["\"t\"", Italic, 18, StripOnInput -> False], 
        TraditionalForm], 
       FormBox[
        StyleBox["\"Re[x]\"", Italic, 18, StripOnInput -> False], 
        TraditionalForm]}, AxesOrigin -> {0, 0.031154063605413944`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 75}, {0.031154063605413944`, 0.15225092477127425`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 14]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Approximate\"", "\"Exact\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.826580616411996*^9, 3.826580750618148*^9, 3.8265808300900183`*^9, {
   3.826580893915328*^9, 3.826580925556818*^9}, 3.8265809697283087`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"bd6ffc4b-4adc-4d6a-a94e-29b5fcda29a1"]
}, Open  ]],

Cell[TextData[{
 StyleBox["(b.) ", "Subsubsection"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Integral]", 
      FractionBox["1", "2"]], "2"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "t"}], ")"}], 
     SuperscriptBox["e", 
      RowBox[{"ix", "(", 
       RowBox[{
        FractionBox[
         SuperscriptBox["t", "3"], "3"], "-", "t"}], ")"}]], "dt", " "}]}], 
   TraditionalForm]], "Subsubsection",ExpressionUUID->
  "d510a440-39aa-4028-9edc-4ab7960e4339"], "Subsubsection"]
}], "Text",
 CellChangeTimes->{{3.826472782511511*^9, 
  3.826472873749323*^9}},ExpressionUUID->"bbc7944d-476a-4ba3-a324-\
c3e5897acbf1"],

Cell[TextData[{
 "We will use the method of stationary phase with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "t", ")"}], " ", "=", " ", 
    RowBox[{"1", "+", "t"}]}], TraditionalForm]],ExpressionUUID->
  "7a83ce97-cfd6-4d81-8b44-a8b12f3b50ea"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Phi]", "(", "t", ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        SuperscriptBox["t", "3"], "3"], "-", "t"}], " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"\[Phi]", "''"}], 
       RowBox[{"(", "t", ")"}]}]}], "=", 
     RowBox[{"2", "t"}]}]}], TraditionalForm]],ExpressionUUID->
  "fb802ffc-5128-498c-b353-f6d4f21c1d75"],
 ". Setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]", "'"}], 
     RowBox[{"(", "t", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["t", "2"], "-", "1"}], "=", " ", "0"}]}], 
   TraditionalForm]],ExpressionUUID->"9614365d-3973-4b11-93cf-af2f00aebb66"],
 ", we obtain that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    SuperscriptBox["t", "*"], "1"], TraditionalForm]],
  InitializationCell->True,
  FormatType->TraditionalForm,ExpressionUUID->
  "8e40b390-c0dc-4f44-a206-f13b4d8df309"],
 " = -1 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    SuperscriptBox["t", "*"], "2"], TraditionalForm]],
  InitializationCell->True,
  FormatType->TraditionalForm,ExpressionUUID->
  "3c428ea9-e9d2-4552-ae89-185db5f36716"],
 " = 1 . We observe that only ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    SuperscriptBox["t", "*"], "2"], TraditionalForm]],
  InitializationCell->True,
  FormatType->TraditionalForm,ExpressionUUID->
  "d85ae9fd-5234-44c0-a0cc-e0d2155168bb"],
 " = 1 is within our interval, thus a=1. Using the formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"I", "(", "x", ")"}], " ", "\[Tilde]", " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"2", "\[Pi]"}], 
        RowBox[{"x", "|", 
         RowBox[{
          RowBox[{"\[Phi]", "''"}], 
          RowBox[{"(", "a", ")"}]}], "|"}]], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"f", "(", "a", ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "x", " ", 
        RowBox[{"\[Phi]", "(", "a", ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
        RowBox[{
         RowBox[{"sgn", "(", 
          RowBox[{
           RowBox[{"\[Phi]", "''"}], 
           RowBox[{"(", "a", ")"}]}], ")"}], "/", "4"}]}]}]]}]}], 
   TraditionalForm]],ExpressionUUID->"6bb79869-0ad8-4a7e-9002-ecdf88dbd7e1"],
 ", we obtain:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"I", "(", "x", ")"}], " ", "\[Tilde]", " ", 
    RowBox[{"2", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["\[Pi]", "x"], ")"}], 
      RowBox[{"1", "/", "2"}]], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "x", " "}], "3"], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"\[Pi]", " ", "/", "4"}]}]}]]}]}], TraditionalForm]],
  FontColor->RGBColor[1, 0, 0],ExpressionUUID->
  "51ea88e1-520b-484e-8d50-d1e274e3bf67"]
}], "Text",
 CellChangeTimes->{{3.826581129081895*^9, 3.826581181686954*^9}, {
  3.826581232154522*^9, 3.826581260599338*^9}, {3.826581474763242*^9, 
  3.826581644768774*^9}, {3.826581824003104*^9, 
  3.8265818269464893`*^9}},ExpressionUUID->"a00613c0-4398-43be-b29c-\
d03651e3f6f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"2", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["\[Pi]", "x"], ")"}], 
        RowBox[{"1", "/", "2"}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "x", " "}], "3"], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"\[Pi]", " ", "/", "4"}]}]}]]}], "]"}], ",", " ", 
     RowBox[{"Re", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "t"}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "x", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              SuperscriptBox["t", "3"], "3"], "-", "t"}], ")"}]}]]}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          FractionBox["1", "2"], ",", "2"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "75"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Solid", ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}], ",", " ", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<t\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Re[x]\>\"", ",", " ", "Italic", ",", " ", "18"}], "]"}]}],
      "}"}]}], ",", " ", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Approximate\>\"", ",", "\"\<Exact\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8265816570447893`*^9, 3.826581706458427*^9}, 
   3.826581827850268*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"42f118b4-577c-43e3-8b99-d3c5098922b7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.005]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$685769#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.005]], 
         LineBox[CompressedData["
1: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
zIMonkO/q3Il+h/dOp5m
          "]]}, Annotation[#, "Charting`Private`Tag$685769#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        StyleBox["\"t\"", Italic, 18, StripOnInput -> False], 
        TraditionalForm], 
       FormBox[
        StyleBox["\"Re[x]\"", Italic, 18, StripOnInput -> False], 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 75}, {-1.646672686025004, 1.997675847697311}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 14]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Approximate\"", "\"Exact\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.045]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.826581720018063*^9, 3.826581843166616*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"f6642ebe-1f94-4fd4-8400-9163e7df6a2d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1379, 934},
WindowMargins->{{Automatic, 31}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification->2.,
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d75e67b7-b5ca-4e2d-9fea-0daa88af3a50"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 505, 8, 194, "Title",ExpressionUUID->"197654a4-4d8f-4ad2-acd2-0426bba106a8"],
Cell[1088, 32, 204, 4, 62, "Author",ExpressionUUID->"47fdc244-5ee2-4b42-93c3-40f677fdf9ef"],
Cell[1295, 38, 587, 9, 61, "Affiliation",ExpressionUUID->"581392a7-3011-4211-898e-5aefcdf8effb"],
Cell[CellGroupData[{
Cell[1907, 51, 301, 5, 134, "Section",ExpressionUUID->"6c8fe1de-112b-425f-acb6-2124e9a34ef3"],
Cell[CellGroupData[{
Cell[2233, 60, 1294, 31, 152, "Subsubsection",ExpressionUUID->"a0ae1b84-25f3-4300-a8df-bc290908fc17"],
Cell[3530, 93, 3965, 120, 605, "Text",ExpressionUUID->"712ce36d-dfc1-4bba-9ea4-50782e379cd9"],
Cell[CellGroupData[{
Cell[7520, 217, 2512, 69, 369, "Input",ExpressionUUID->"f841fd77-ded7-4c2f-b290-dc53cacead6d"],
Cell[10035, 288, 47057, 841, 523, "Output",ExpressionUUID->"95a77862-9b9d-4340-9788-f6c2b5637964"]
}, Open  ]],
Cell[57107, 1132, 128, 3, 59, "Input",ExpressionUUID->"5a3994fa-a7c1-451c-a20a-4f6e05c5c66b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57284, 1141, 349, 6, 134, "Section",ExpressionUUID->"5978323c-4735-4fe8-a798-9f0f2eef2ef5"],
Cell[CellGroupData[{
Cell[57658, 1151, 785, 12, 140, "Subsubsection",ExpressionUUID->"1f65448a-b07f-40ad-adf3-66189185f3f6"],
Cell[58446, 1165, 545, 16, 87, "Text",ExpressionUUID->"3477c812-59ce-4d0d-ba0e-0e8618c79867"],
Cell[58994, 1183, 4798, 135, 475, "Text",ExpressionUUID->"8b7dfdab-ff9e-4369-b575-6be1c0078268"],
Cell[CellGroupData[{
Cell[63817, 1322, 2116, 56, 352, "Input",ExpressionUUID->"bdefc3e7-ce2a-453a-8f27-01e511a62cca"],
Cell[65936, 1380, 50768, 901, 529, "Output",ExpressionUUID->"bd6ffc4b-4adc-4d6a-a94e-29b5fcda29a1"]
}, Open  ]],
Cell[116719, 2284, 680, 21, 112, "Text",ExpressionUUID->"bbc7944d-476a-4ba3-a324-c3e5897acbf1"],
Cell[117402, 2307, 3564, 109, 288, "Text",ExpressionUUID->"a00613c0-4398-43be-b29c-d03651e3f6f3"],
Cell[CellGroupData[{
Cell[120991, 2420, 2257, 63, 371, "Input",ExpressionUUID->"42f118b4-577c-43e3-8b99-d3c5098922b7"],
Cell[123251, 2485, 72861, 1261, 523, "Output",ExpressionUUID->"f6642ebe-1f94-4fd4-8400-9163e7df6a2d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

